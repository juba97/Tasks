/*
   1. მოცემულია 2 რიცხვი ვიპოვოთ მაქსიმუმი.
*/

{
   int a;
   int b;

   a = 4;
   b = 3;

   int First  = 2 * (a - b) + 1;
   int Second = First % 2;
   int Third  = (a - b) * Second;
   int Fourth = a + b + Third;
   int result = Fourth / 2;
}

/*
    2. მოცემულია რიცხვი. თუ ეს რიცხვი ლუწია ცვლადში ჩავწეროთ 1 თუ კენტია ჩავწეროთ 0
*/

{
    int n;
    int k;
    int result;

    n = 6;

    k = n % 2;
    result = (k + 1) % 2;
}

/*
   3. N მოსწავლე იყოფს K ვაშლს თანაბრად, 
   ისე რომ ვაშლების რაოდენობა რომელიც 2 მოსწავლეს შეხვდა 1-ზე მეტით არ განსხვავდებოდეს.
    Input Data
        პროგრამა იღებს ორ მთელ რიცხვს N და K
    Output Data
        აღვწეროთ ცვლადი result და მოვათავსოთ მოსწავლეების რაოდენობა,
        რომლებსაც შეხვდათ ნაკლები ვაშლი ვიდრე მათ კლასელებს.
     Examples:
       Input        |   Output
        7 30        |   5
       Input        |   Output
        7 28        |   0
*/

{
    int N;
    int K;
    int R;

    int result;

    N = 7;
    K = 30;

    R = K % N;
    result = (N - R) % N; 
}

/*
   4. მოცემულია 2 ნატურალური რიცხვი n და m. თუ ერთი იყოფა მეორეზე მთელად,
    გამოვიტანოთ 1 თუ არა და ნებისმიერი სხვა რიცხვი
    Input Data
        მოცემულია ორი ნატურალური რიცხვი n და m.
    Output Data
        მოვათავსოთ result ცვლადში ამოცანის შედეგი
    Examples:
       Input        |   Output
        2 8         |   1
       Input        |   Output
        8 2         |   1
*/

{
   int n;
   int m;
   int r;
   int result;

   n = 3;
   m = 8;

   r = (n % m) * (m % n);
   result = r + 1;
}
