/*
    ორნიშნა რიცხვის ციფრთა ჯამი
    input   output
    61    | 7
    20    | 2
*/

{
    int n = 45;
    int sum;
    sum = (n / 10) + (n % 10);
}

/*
    საშუალო არითმეტიკული
    input    output
    35 81  | 58.0
    14 29  | 21.5
*/

{
    double a;
    double b;

    a = 14;
    b = 29;

    double avg;
    avg = (a + b) / 2;
}

/*
    დაწერეთ პროგრამა, რომელიც ფუთებსა და დიუმებში მოცემულ სიგრძეს გადაიყვანს
    სანტიმეტრებში. 1 ფუტი=30,48სმ, 1 დიუმი=2,54სმ.
    input   output
    2 3   | 68.58
*/

{
    double feet;
    double inn;
    double sum;

    double a = 2;
    double b = 3;

    feet = 30.48;
    inn = 2.54;
    sum = (a * feet) + (b * inn);   
}

/*
    მოცემულია სამნიშნა მთელი რიცხვი N (100 <= N <= 999), რომელიც არ მთავრდება 0-ით.
    დაწერეთ პროგრამა, რომელიც გამოიტანს ამ რიცხვის შებრუნებულ ჩანაწერს.
    input   output
    845   | 548
    601   | 106
*/

{
    int n;      
    int a;
    int b;
    int c;

    n = 601;

    a = n % 10;
    b = n % 100 / 10;
    c = n / 100;
    n = (a * 100) + (b * 10) + c;
}

/*
    მოცემულია მთელი N (0 < N < 30000) წამი. დაწერეთ პროგრამა, რომელიც დროის იგივე
    მონაკვეთს გამოიტანს ფორმატით “საათი:წუთი:წამი”
    input   output
    3676  | 1:1:16
    37    | 0:0:37
    60    | 0:1:0
*/

{
   int n = 60;
   int clock = n / 3600; 
   int minut = (n % 3600) / 60; 
   int secund = n / 60; 
}
