[Sequences Loop]  = სხავადასხვა მოქმედებათა თანმიმდევრობისგან შემდგარი ციკლი 
[Selections Loop] = შერჩევას აკეთებს კითხვაზე პასუხის საფუძველზე
[For Loop] = ერთი და იგივე კითხვას უსვამ სანამ გარკვეული ამოცანა არ შესრულდება
[Nested while Loops] = გარე მარყუჟის ყოველი განმეორებით, შიდა მარყუჟი სრულად ასრულებს ყველა გამეორებას.

[Class] = არის ობიექტზე ორიენტირებული კონსტრუქცია, რომელიც ეხმარება პროგრამებს ორგანიზებაში.
[Abstraction] = აბსტრაქცია გამოიყენება არასასურველი მონაცემების დასამალად და აჩვენებს მხოლოდ საჭირო თვისებებსა და მეთოდებს.
[Encapsulation] = ინკაფსულაცია ავალდებულებს მონაცემთა წევრებსა და წევრთა ფუნქციებს ერთ ერთეულში, რათა თავიდან აიცილოს უცხო პირების მასში პირდაპირ წვდომა.
[Formal Parameter] = მეთოდის შიგნით ცვლადს, რომელიც იღებს არგუმენტს ეწოდება ფორმალური პარამეტრი.
[Stack] = სტეკიდან მონაცემები იშლება ავტომატურად კომპილაციის დასრულების შემდეგ
[Tilde ~ (use destructor)]
[Reference type] = თავსდებიან ჰიპში და მისამართებს ინახავენ სტეკში
[Value type] = თავსდებიან სტეკში

[Last in First out - LIFO] = ბოლოს შესული გადის პირველი (სტეკი) 
მაგ: იარაღის მჭიდში ბოლოს ჩადებული ტყვია გაისვრის პირველი


   Access Modifiers
      Public
      Private 
      Protected
      Internal     
      
  Create Class Object
      Building house; // declare reference to object
      house = new Building(); // allocate a Building object
